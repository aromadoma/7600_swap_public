****************************************************************************

КАК УСТАНОВИТЬ:
****************************************************************************

- Установить на линуксовой машине python3, git, poetry, make:

		sudo apt-get python3 git make
		curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 -

- Склонировать репозиторий с гихаба:

		git clone git@github.com:aromadoma/7600_swap_public.git

- Зайти в эту папку и выполнить установку скрипта:

		make install

- Закинуть руками файл с параметрами parameters.json в папку
	<путь установки>/config_generator/.data/

--- Если репозиторий уже был склонирован, но появились изменения, то просто подтянуть их 
	и переустановить:

		git pull
		make reinstall


****************************************************************************

ПЕРЕД ПЕРВЫМ ЗАПУСКОМ:
****************************************************************************

Настроить домашнюю директорию, в которой будут храниться файлы для работы скрипта:

	config-generator homedir set <path_to_homedir>
	config-generator homedir show - показать текущую домашнюю директорию

В ней автоматом создадутся:

	billing/   - папка для выгрузок из биллинга. Сюда необходимо поместить 
	             два xlsx файла (для каждой из PE). Названия должны быть 
	             "{hostname}-billing.xlsx"
	preparing/ - сюда сохраняется таблица со всеми промежуточными данными
	             с 7600
	config/    - сюда сохраняются готовые конфиги для NCS, SE и удаленных
	             PE
	logs/      - логи
	check/     - файлы с информацией для проверки состояний до и после
	             переноса

	Папки preparing/, config/, /check и logs/ создадутся только после первого
	запуска.


****************************************************************************

ПЕРЕД КАЖДЫМ ЗАПУСКОМ:
****************************************************************************

- Выключить CDP на линках в сторону коммутаторов, если там видны ненужные 
	девайсы (супер важно)

- Проверить дескрипшены всех физических линков - если на них нет CDP, то в качестве 
	ID коммута будет использоваться айпишник из дескрипшена. Т.е. надо, чтобы этот 
	айпишник был указан полностью. 
	Например: LTE_MGS-3712F_10.4.212.235_Gi11, LTE_MGS-10.4.212.235

- Удалить неиспользуемые физические интерфейсы (можно не удалять, если они в дауне)
- Удалить тестовые PPPoE сабинтерфейсы (которые подписаны как pppoe, но по факту 
	идут на другие PE)


****************************************************************************

ПАРСИНГ:
****************************************************************************


config-generator parse [OPTIONS] IP_ADDRESSES...

  -u TEXT   Username for ssh connection
  -p TEXT   Password for ssh connection
  --one-pe  Use this flag if there is only one PE
  --help    Show this message and exit.

  Ключ --one-pe разрешает делать конфиг для одной PE, тогда надо два раза ввести один и тот же айпишник.
  Но на самом деле на выходе лютая жесть, придется много править руками. Лучше не использовать

Пример:
	config-generator parse 10.4.12.1 10.4.12.2



****************************************************************************

ПОСЛЕ ПАРСИНГА:
****************************************************************************

После того, как парсер сделал таблицу <homedir>/preparing/{hostname}-preparing.xslx,
ее надо отредактировать. 

В таблице вкладки:

	- Список вланов
	- Список VRF
	- Список XC				-- будет использоваться для генерации
	- Список интерфейсов
	- Общий список вланов	-- будет использоваться для генерации
	- Общий список VRF		-- будет использоваться для генерации
	- Общий список соседей	-- будет использоваться для генерации

Инфу нужно править на тех вкладках, которые будут использоваться для генерации конфига.
Поля, которые нужно редактировать, помечены красным и содержат какой нибудь из ALARM-флагов.
В поле "комментарий" обычно написано что не так.

Если запустить генератор с файлом, содержащим поля с ALARM, такие поля просто будут пропущены.
Иногда (обычно, если такие есть во вкладке "Общий список соседей"), генератор выдаст ошибку.


- ОБЩИЙ СПИСОК СОСЕДЕЙ:

	Сосед будет в ALARM, если его ID это просто дескрипшен интерфейса (не было ни CDP, 
	ни IP в дескрипшене). Нужно сделать замену имени соседа ПО ВСЕЙ EXCEL КНИГЕ, т.к. это 
	имя фигурирует много где. Либо просто его удалить, если не нужен. 

	Любой влан, разбаненный на такого соседа, тоже будет помечен флагом alarm_neighbors 
	и такие вланы придется потом чистить во вкладке "Общий список вланов". 
	Поэтому проще заранее исправить дескрипшены физических интерфейсов, чтобы было меньше работы.

	Гистовый роутер нужно переименовать в GIST_ROUTER. (Или любой вариант, в котором есть слово GIST).
	Его надо выделять из общей кучи, потому что в бридж-доменах не надо вешать split-horizon 
	в его сторону.

- ОБЩИЙ СПИСОК ВЛАНОВ:

	Влан будет в ALARM если:

		- На нем включен OSPF или EIGRP (флаги is_in_ospf, is_in_eigrp)
		- Влан L3 на обеих коробках, при этом подсети разные (флаг alarm_subnets)
		- Влан L3 на одной коробке, L2 на другой коробке, и при этом у них нет общих 
			соседей на L2 (alarm_intersection)
		- Оба влана L2 и не имеют общих соседей (alarm_intersection)
		- Хотя бы один из соседей, на который разбанен этот влан, имеет ALARM флаг (alarm_neighbors)
		- Разбанен на несуществующего соседа (alarm_neighbors). Несуществующий сосед это коммут, 
			интерфейс в сторону которого был в дауне, его вообще не будет в общем списке соседей.

	Если помеченный влан не надо переносить, то можно его оставить без изменений и он просто
	будет пропущен (либо удалить). Если влан пересекается, но оба нужно перенести, то надо удалить из него 
	все alarm-флаги и он создастся как дубликат с цифрой 5 в начале.

- СПИСОК XC:

	Будет в ALARM, если исходящий интерфейс в сторону несуществующего соседа.



****************************************************************************

ГЕНЕРАЦИЯ:
****************************************************************************


config-generator generate [OPTIONS] OLD_IP_ADDRESSES...

Options:
  -u TEXT                 Username for ssh connection
  -p TEXT                 Password for ssh connection
  --pe1-lo2 TEXT          NCS-01's loopback2
  --pe2-lo2 TEXT          NCS-02's loopback2
  --pe1-lo30 TEXT         NCS-01's loopback30
  --pe2-lo30 TEXT         NCS-02's loopback30
  --rt TEXT               The first BGP RT number for EVIs
  --evi INTEGER           The first EVI number for SE
  --bvi INTEGER           The first BVI or l3-subinterface number for SE
  --no-remotes            Don't create config for remote PEs
  --no-init               Don't create initial part of config
  --se [KZN|CHE|ALM|APS]  SE location
  -y                      Answer yes automatically
  --help                  Show this message and exit.

Можно юзать и без ключей, тогда будет предлагать вводить значения по очереди.

Ключ --rt всегда вводится в формате 65050:<...>
Ключ --no-init создает конфиг без всяких настроек хостнеймов, aaa, глобальных настроек протоколов.
	Я даже не уверен, что там сейчас актуальный init-конфиг.
Ключ --no-remote создает конфиг только для NCS и SE, без удаленных сторон

Пример:
	config-generator generate 10.4.12.1 10.4.12.2 --pe1-lo2 10.4.12.11 --pe2-lo2 10.4.12.12 
	--pe1-lo30 10.30.4.101 --pe2-lo30 10.30.4.102 --rt 65050:100000 --evi 5000 --bvi 45000 
	--se CHE --no-init


****************************************************************************

ПРОВЕРКА XC ВО ВРЕМЯ РАБОТ:
****************************************************************************

ДО РАБОТ
********

Перед работами нужно снять состояния XC на 76 (state-before):

	config-generator check xc state-before [OPTIONS] OLD_PE_ADDRESSES...

	  Get XC states before swap to compare later

	Options:
	  -u TEXT  Username for ssh connection
	  -p TEXT  Password for ssh connection
	  --help   Show this message and exit.


Пример:
	config-generator check xc state-before 10.4.12.1 10.4.12.2

Файл со снятыми XC сохранится в файл <homedir>/check/<rues_name>-XC.


ПОСЛЕ РАБОТ
***********

После работ запускаем проверку XC на NCS и SE (state-after):

	config-generator check xc state-after [OPTIONS] NCS_ADDRESSES... SE_LOCATION

	  Get XC states after swap

	Options:
	  -u TEXT          Username for ssh connection
	  -p TEXT          Password for ssh connection
	  --only [SE|NCS]  Check xc only on SE or NCS
	  --help           Show this message and exit.

	Ключ --only позволяет проверять XC только с NCS или только с SE.
	По-умолчанию, проверяются все.

	Пример:
		config-generator check xc state-after 10.17.4.11 10.17.4.12 APS

	В консоль будут вываливаться логи типа:

		SE-01 10.30.1.117 pw-id 3540: UP[OK]
		SE-01 10.30.1.117 pw-id 3569: UP[OK]
		SE-01 10.30.1.127 pw-id 319: BD для SDR-RUES не найден
		...


****************************************************************************

ПРОВЕРКА МАКОВ С XC:
****************************************************************************

config-generator check xc mac [OPTIONS] OLD_PE_ADDRESS SE_LOCATION

  Check if there are mac addresses from pseudowire in EVPN

Options:
  -u TEXT   Username for ssh connection
  -p TEXT   Password for ssh connection
  --errors  Show only BDs without mac from PW
  --help    Show this message and exit.

  Ключ --errors будет вываливать в консоль только инфу о BD без маков.
  По-умолчанию, показывает инфу про все XC.

  Пример:
  	config-generator check xc mac 10.17.4.11 APS

  	XC 10.30.1.227 pw-id 1570 (EVI ID: 11570): Маки есть
	XC 10.30.1.227 pw-id 1791 (EVI ID: 11791): Маки есть
	XC 10.30.1.227 pw-id 2662 (EVI ID: 12662): Маки не найдены
	...




****************************************************************************

ДРУГИЕ КОМАНДЫ:
****************************************************************************

SSH-ENABLE
***********

	Включить ssh на NCS. Работает, но медленно, связано с какой-то фигней
	при работе netmiko с telnet на IOS-XR.

	Пример:

		config-generator ssh-enable 10.4.12.11

		Введите имя пользователя: r_kuzmin
		Введите пароль: 
		Подключение к [10.4.12.11]...
		AGR-RUES-NCS-PE4-01 [OK].

		SSH на AGR-RUES-NCS-PE4-01 не настроен, или настроен неверно (VRF не MGMT). 
		Включить? [Y/n]: y

		Добавляем конфиг для ssh...
		Готово.


UPLOAD
******

	Загрузить сгенерированный файл с конфигом на харддиск NCS. 
	Ключ --validate запускает валидацию прямо на коробке.
	Можно запустить валидацию и отдельно, если конфиг уже залит на harddisk.

	В принципе, валидация конфига - единственная причина заливать готовый конфиг на
	железку, потому что применить его в таком виде всё равно не получится.

	Пример вывода:

		config-generator upload 10.1.39.11 --validate (можно указывать несколько IP)

		Введите имя пользователя: r_kuzmin
		Введите пароль: 
		Подключение к [10.1.39.11]...
		KZN-ZALES-NCS-PE1-01 [OK].
		Файл конфигурации для KZN-ZALES-NCS-PE1-01 загружен.
		harddisk:KZN-ZALES-NCS-PE1-01-configuration.txt


VALIDATE
********

	Запустить валидацию залитого конфига:

	- на NCS включается валидатор (configuration validation enable)
	- загружается в конфигурацию-кандидат (load harddisk:<hostname>-configuration.txt)
	- если конфиг не принят, смотрит ошибки синтаксиса (show configuration failed load detail)
	- запускается валидатор (validate commit show-error)
	- все найденные проблемы вываливает в консоль.
	- скрипт может крашнуться по таймауту, если файл конфига слишком большой и NCS 
		долго его загружает.

	Валидацию можно запустить из команды UPLOAD с помощью ключа --validate.
	КОНФИГ НЕ ПРИМЕНЯЕТСЯ ФАКТИЧЕСКИ! Можно юзать безопасно.

	Пример:
		config-generator validate 10.1.39.11 --validate (можно указывать несколько IP)

		Введите имя пользователя: r_kuzmin
		Введите пароль: 
		Подключение к [10.1.39.11]...
		KZN-ZALES-NCS-PE1-01 [OK].
		Включаем валидатор на NCS...
		Загружаем конфигурацию из файла...

		**************************************************************
		                       ПРОВЕРКА КОНФИГА                         
		**************************************************************

		                          ВАЛИДАТОР:                          

		interface Bundle-Ether10.443 l2transport
		 service-policy output 5mit
		!!% ERROR:: Service policy name "5mit" does not exist


		                          СИНТАКСИС:                          

		policy-map 3,5m
		           ^
		 Invalid input detected at '^' marker.
		 class class-default
		  shape average 6 mbps
		  end-policy-map
		policy-map 4,5m
		           ^
		 Invalid input detected at '^' marker.
		 class class-default
		  shape average 6 mbps
		  end-policy-map
		interface preconfigure TenGigE0/0/0/{bundle_id} cdp
		                                    ^
		 Invalid input detected at '^' marker.
		end


POLICY-CREATE
*************

	Создать конфиг для полисера. Вываливает просто в консоль для копипаста.
	Можно генерить сразу несколько:

		config-generator policy-create 1024k 5m 100m

			policy-map 1024k
			 class class-default
			  shape average 1126 kbps
			 !
			  end-policy-map
			!
			policy-map 5m
			 class class-default
			  shape average 6 mbps
			 !
			  end-policy-map
			!
			policy-map 100m
			 class class-default
			  shape average 110 mbps
			 !
			  end-policy-map
			!



APPLY
*****

	Применить залитый конфиг на NCS.
	НЕ РАБОТАЕТ.

****************************************************************************